{
	"id": "c94097e3-a0a2-0748-945f-14036dcb5dcf",
	"name": "N(DG) like questions",
	"description": "",
	"order": [
		"014db2c6-058b-2631-331b-c45cfce4fd70",
		"8df69924-bf48-7f6f-982a-fef30368d096",
		"75c22d5b-b519-2d4e-18e1-ea81246162a4",
		"e55eec59-bab4-b308-e7c6-0fbb4416308e",
		"e00fd2bf-cc3d-c50e-c49f-986e873e388f",
		"69416409-c67a-044c-4e1d-14a957799542",
		"b5260588-f8e4-f980-5615-2124e4bafdfe"
	],
	"folders": [],
	"folders_order": [],
	"timestamp": "2018-06-04T07:56:58.114Z",
	"owner": "2436859",
	"public": false,
	"events": [],
	"variables": [],
	"auth": null,
	"requests": [
		{
			"id": "014db2c6-058b-2631-331b-c45cfce4fd70",
			"headers": "Content-Type: application/x-www-form-urlencoded\n",
			"headerData": [
				{
					"key": "Content-Type",
					"value": "application/x-www-form-urlencoded",
					"enabled": true,
					"description": ""
				}
			],
			"url": "http://{{server}}{{admin_port}}/admin/login",
			"queryParams": [],
			"events": [
				{
					"listen": "test",
					"script": {
						"id": "b1277a7c-3cc6-446e-849a-216caceb047f",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"pathVariables": {},
			"pathVariableData": [],
			"method": "POST",
			"data": [
				{
					"key": "emailOrPhone",
					"value": "{{admin_email}}",
					"description": "",
					"type": "text",
					"enabled": true
				},
				{
					"key": "password",
					"value": "{{admin_password}}",
					"description": "",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"auth": null,
			"time": 1528109544111,
			"name": "ADMIN Login",
			"collectionId": "c94097e3-a0a2-0748-945f-14036dcb5dcf",
			"responses": [],
			"isFromCollection": true,
			"timestamp": null,
			"folder": null,
			"preRequestScript": null,
			"tests": null,
			"currentHelper": null,
			"helperAttributes": null
		},
		{
			"id": "69416409-c67a-044c-4e1d-14a957799542",
			"name": "Update User Email",
			"collectionId": "c94097e3-a0a2-0748-945f-14036dcb5dcf",
			"method": "POST",
			"events": [
				{
					"listen": "test",
					"script": {
						"id": "9e6b99b3-0c6a-4765-aaf9-aa01aac340c7",
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"var user_id = pm.environment.get(\"user_id\");",
							"var email = pm.environment.get(\"email_random\");",
							"var gender = pm.environment.get(\"gender\");",
							"var random = pm.environment.get(\"random\");",
							"var userAvatar = pm.environment.get(\"userAvatar\")",
							"tests[\"userId\"] = jsonData.data.updateUser.id === user_id;",
							"tests[\"email\"] = jsonData.data.updateUser.email === email;",
							"tests[\"gender\"] = jsonData.data.updateUser.gender === gender;",
							"tests[\"displayedId\"] = responseBody.has(\"displayedId\");",
							"tests[\"birthday\"] = jsonData.data.updateUser.birthday === Number(\"153\" + random);",
							"tests[\"gender\"] = jsonData.data.updateUser.state === \"ACTIVE_USER\";",
							"tests[\"avatar_id\"] = jsonData.data.updateUser.avatar_id === Number(userAvatar);"
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "22a393de-b281-49d9-bee4-9c1708508845",
						"type": "text/javascript",
						"exec": [
							"var userAvatar =  Math.floor(Math.random() * (13 - 1)+1);",
							"var gender;",
							"if (userAvatar >= 6) {",
							"    gender = \"MALE\"",
							"} else {",
							"    gender = \"FEMALE\"",
							"}",
							"postman.setEnvironmentVariable(\"userAvatar\", userAvatar);",
							"postman.setEnvironmentVariable(\"gender\", gender);"
						]
					}
				}
			],
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{access_token}}",
			"dataMode": "raw",
			"data": [],
			"rawModeData": "{\n\t\"query\":\"mutation updateUser { updateUser (birthday:153{{random}}, gender:{{gender}}, avatar_id:{{userAvatar}}) { id, email, gender, displayedId, birthday, state, avatar_id }}\"\n}",
			"pathVariables": {},
			"url": "{{protocol}}://{{server}}{{port}}/graphql",
			"responses": [],
			"pathVariableData": [],
			"queryParams": [],
			"headerData": [
				{
					"key": "Content-Type",
					"value": "application/json",
					"enabled": true,
					"description": ""
				},
				{
					"key": "Authorization",
					"value": "Bearer {{access_token}}",
					"enabled": true,
					"description": ""
				}
			],
			"auth": null,
			"collection_id": "c94097e3-a0a2-0748-945f-14036dcb5dcf",
			"folder": null,
			"timestamp": null,
			"preRequestScript": "var userAvatar =  Math.floor(Math.random() * (13 - 1)+1);\nvar gender;\nif (userAvatar >= 6) {\n    gender = \"MALE\"\n} else {\n    gender = \"FEMALE\"\n}\npostman.setEnvironmentVariable(\"userAvatar\", userAvatar);\npostman.setEnvironmentVariable(\"gender\", gender);",
			"tests": "var jsonData = JSON.parse(responseBody);\npm.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\nvar user_id = pm.environment.get(\"user_id\");\nvar email = pm.environment.get(\"email_random\");\nvar gender = pm.environment.get(\"gender\");\nvar random = pm.environment.get(\"random\");\nvar userAvatar = pm.environment.get(\"userAvatar\")\ntests[\"userId\"] = jsonData.data.updateUser.id === user_id;\ntests[\"email\"] = jsonData.data.updateUser.email === email;\ntests[\"gender\"] = jsonData.data.updateUser.gender === gender;\ntests[\"displayedId\"] = responseBody.has(\"displayedId\");\ntests[\"birthday\"] = jsonData.data.updateUser.birthday === Number(\"153\" + random);\ntests[\"gender\"] = jsonData.data.updateUser.state === \"ACTIVE_USER\";\ntests[\"avatar_id\"] = jsonData.data.updateUser.avatar_id === Number(userAvatar);",
			"currentHelper": null,
			"helperAttributes": null
		},
		{
			"id": "75c22d5b-b519-2d4e-18e1-ea81246162a4",
			"name": "SignIUp with email ME",
			"collectionId": "c94097e3-a0a2-0748-945f-14036dcb5dcf",
			"method": "POST",
			"events": [
				{
					"listen": "test",
					"script": {
						"id": "0ecdb143-8e88-4bfe-8b3c-70e79084e618",
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable(\"user_id\", jsonData.data.user.id);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						]
					}
				}
			],
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{access_token}}",
			"dataMode": "raw",
			"data": [],
			"rawModeData": "{\n\t\"query\":\"query User { user {id }}\"\n}",
			"pathVariables": {},
			"url": "{{protocol}}://{{server}}{{port}}/graphql",
			"responses": [],
			"pathVariableData": [],
			"queryParams": [],
			"headerData": [
				{
					"key": "Content-Type",
					"value": "application/json",
					"enabled": true,
					"description": ""
				},
				{
					"key": "Authorization",
					"value": "Bearer {{access_token}}",
					"enabled": true,
					"description": ""
				}
			],
			"auth": null,
			"collection_id": "c94097e3-a0a2-0748-945f-14036dcb5dcf",
			"isFromCollection": true,
			"folder": null,
			"timestamp": null,
			"preRequestScript": null,
			"tests": "var jsonData = JSON.parse(responseBody);\npostman.setEnvironmentVariable(\"user_id\", jsonData.data.user.id);\n\npm.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n",
			"currentHelper": null,
			"helperAttributes": null
		},
		{
			"id": "8df69924-bf48-7f6f-982a-fef30368d096",
			"name": "SignIUp with email",
			"collectionId": "c94097e3-a0a2-0748-945f-14036dcb5dcf",
			"method": "POST",
			"events": [
				{
					"listen": "test",
					"script": {
						"id": "47b615fd-ae45-4aaa-bca7-e7a2e570bf8e",
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable(\"access_token\", jsonData.data.signup.access_token);",
							"",
							"tests[\"Body matches string\"] = responseBody.has(\"access_token\");",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "60693239-9593-4957-b5f1-587f44feeda9",
						"type": "text/javascript",
						"exec": [
							"var random =  Math.floor(Math.random() * (9999999 - 1000000)+1000000);",
							"email_random = \"sandbxtest8+\" + random + \"@gmail.com\"",
							"postman.setEnvironmentVariable(\"random\", random);",
							"postman.setEnvironmentVariable(\"email_random\", email_random);"
						]
					}
				}
			],
			"headers": "Content-Type: application/json",
			"dataMode": "raw",
			"data": [],
			"rawModeData": "{\n  \"query\":\"mutation {signup(emailOrPhone:\\\"{{email_random}}\\\", password:\\\"{{password}}\\\") {access_token}}\"\n}",
			"pathVariables": {},
			"url": "{{protocol}}://{{server}}{{port}}/graphql",
			"responses": [],
			"pathVariableData": [],
			"queryParams": [],
			"headerData": [
				{
					"key": "Content-Type",
					"value": "application/json"
				}
			],
			"auth": null,
			"collection_id": "c94097e3-a0a2-0748-945f-14036dcb5dcf",
			"preRequestScript": "var random =  Math.floor(Math.random() * (9999999 - 1000000)+1000000);\nemail_random = \"sandbxtest8+\" + random + \"@gmail.com\"\npostman.setEnvironmentVariable(\"random\", random);\npostman.setEnvironmentVariable(\"email_random\", email_random);",
			"tests": "var jsonData = JSON.parse(responseBody);\npostman.setEnvironmentVariable(\"access_token\", jsonData.data.signup.access_token);\n\ntests[\"Body matches string\"] = responseBody.has(\"access_token\");\n\npm.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n",
			"currentHelper": null,
			"helperAttributes": null
		},
		{
			"id": "b5260588-f8e4-f980-5615-2124e4bafdfe",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{access_token}}\n",
			"headerData": [
				{
					"key": "Content-Type",
					"value": "application/json",
					"enabled": true,
					"description": ""
				},
				{
					"key": "Authorization",
					"value": "Bearer {{access_token}}",
					"enabled": true,
					"description": ""
				}
			],
			"url": "{{protocol}}://{{server}}{{port}}/graphql",
			"queryParams": [],
			"events": [
				{
					"listen": "test",
					"script": {
						"id": "71f1d78e-8228-49ac-bfbf-610dd57b56e8",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "96de733c-3269-4642-8252-953fe7d727bc",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"pathVariables": {},
			"pathVariableData": [],
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"auth": null,
			"time": 1528099086299,
			"name": "Like  to Question",
			"collectionId": "c94097e3-a0a2-0748-945f-14036dcb5dcf",
			"responses": [],
			"isFromCollection": true,
			"folder": null,
			"timestamp": null,
			"preRequestScript": null,
			"tests": null,
			"currentHelper": null,
			"helperAttributes": null,
			"rawModeData": "{\n\t\"query\": \"mutation { likeQuestion(questionId: \\\"{{question_id}}\\\" ){   message    code  }}\"\n}\n"
		},
		{
			"id": "e00fd2bf-cc3d-c50e-c49f-986e873e388f",
			"name": "Verify user Email",
			"collectionId": "c94097e3-a0a2-0748-945f-14036dcb5dcf",
			"method": "POST",
			"events": [
				{
					"listen": "test",
					"script": {
						"id": "f22a2ef6-997b-497f-ac25-7f99719e48da",
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"tests[\"VERIFIED\"] = jsonData.data.verifyCodeWithToken.isVerified === \"VERIFIED\";",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "7fdf28dd-27b4-4507-be97-8dcb3288e4fd",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{access_token}}",
			"dataMode": "raw",
			"data": [],
			"rawModeData": "{\n\t\"query\":\"mutation { verifyCodeWithToken(code:{{emailCode}}){ isVerified }}\"\n}",
			"pathVariables": {},
			"url": "{{protocol}}://{{server}}{{port}}/graphql",
			"responses": [],
			"pathVariableData": [],
			"queryParams": [],
			"headerData": [
				{
					"key": "Content-Type",
					"value": "application/json",
					"enabled": true,
					"description": ""
				},
				{
					"key": "Authorization",
					"value": "Bearer {{access_token}}",
					"enabled": true,
					"description": ""
				}
			],
			"auth": null,
			"collection_id": "c94097e3-a0a2-0748-945f-14036dcb5dcf",
			"isFromCollection": true,
			"folder": null,
			"timestamp": null,
			"preRequestScript": null,
			"tests": "var jsonData = JSON.parse(responseBody);\n\ntests[\"VERIFIED\"] = jsonData.data.verifyCodeWithToken.isVerified === \"VERIFIED\";\n\npm.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});",
			"currentHelper": null,
			"helperAttributes": null
		},
		{
			"id": "e55eec59-bab4-b308-e7c6-0fbb4416308e",
			"headers": "Authorization: Bearer {{admin_access_token}}\n",
			"headerData": [
				{
					"key": "Authorization",
					"value": "Bearer {{admin_access_token}}",
					"enabled": true,
					"description": ""
				}
			],
			"url": "http://{{server}}{{admin_port}}/admin/api/user?userId={{user_id}}",
			"queryParams": [
				{
					"key": "userId",
					"value": "{{user_id}}",
					"equals": true,
					"description": "",
					"enabled": true
				}
			],
			"events": [
				{
					"listen": "test",
					"script": {
						"id": "20fd7213-6562-4508-ae89-16ad1a2cf2f7",
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"tests[\"response code\"] = responseCode.code === 200;",
							"postman.setEnvironmentVariable(\"emailCode\", jsonData.user.system.verification_codes.email);",
							"if (tests[\"response code\"] !== true) {",
							"    console.log( \"response body: \" ,  responseBody)",
							"    console.log(\"request: \" ,  request)",
							"}"
						]
					}
				}
			],
			"pathVariables": {},
			"pathVariableData": [],
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"auth": null,
			"time": 1528111559780,
			"name": "getUser code",
			"collectionId": "c94097e3-a0a2-0748-945f-14036dcb5dcf",
			"responses": [],
			"isFromCollection": true,
			"folder": null,
			"timestamp": null,
			"preRequestScript": null,
			"tests": "var jsonData = JSON.parse(responseBody);\ntests[\"response code\"] = responseCode.code === 200;\npostman.setEnvironmentVariable(\"emailCode\", jsonData.user.system.verification_codes.email);\nif (tests[\"response code\"] !== true) {\n    console.log( \"response body: \" ,  responseBody)\n    console.log(\"request: \" ,  request)\n}",
			"currentHelper": null,
			"helperAttributes": null
		}
	]
}